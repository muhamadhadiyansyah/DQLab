# -*- coding: utf-8 -*-
"""Python for Data Professional Beginner - Part 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qEdcW_dyqM8LETaq4A0fz2yZFQHOXQ0K

# Program pertama: "Hello World"
"""

print("Hello World!")

"""# Program Pertamaku"""

print("Halo Dunia")
print("Riset Bahasa Python")

"""# Struktur Program Python - Part 1"""

# Statement
print("Belajar Python menyenangkan")
print("Halo Dunia")
print("Hello World!")

bilangan1 = 5 # angka 5 disebut literal
bilangan2 = 10 # angka 10 disebut literal
kalimat1 = "Belajar Bahasa Python" # "Belajar Bahasa Python" disebut literal

print(bilangan1 + bilangan2)

"""# Tugas Praktek"""

bilangan1 = 20
bilangan2 = 10
print(bilangan1 - bilangan2)

"""# Tugas Praktek"""

harga_asli = 20000
potongan = 2000
harga_setelah_potongan = harga_asli - potongan
harga_final = harga_setelah_potongan * 1.1
print(harga_final)

"""# Sequence Type – Part 1"""

contoh_list = [6, 'tujuh', 8, 9.0, 10]

contoh_list = [6, 'tujuh', 8, 9.0, 10]
print(contoh_list[0]) # akan menghasilkan output 6
print(contoh_list[3]) # akan menghasilkan output 9.0

contoh_list = [6, 'tujuh', 8, 9.0, 10]
contoh_list[3] = 'empat' # mengganti nilai pada indeks ke-3
print(contoh_list[3]) # akan menghasilkan output 'empat'

# Tugas
contoh_list = [1, 'dua', 3, 4.0, 5]
print(contoh_list[0]) # akan menghasilkan output 1
print(contoh_list[3]) # akan menghasilkan output 4.0
contoh_list = [1, 'dua', 3, 4, 5]
contoh_list[3] = 'empat'
print(contoh_list[3]) # akan menghasilkan output empat

"""# Sequence Type – Part 2"""

contoh_tuple = ('Juni', 'Juli', 'Agustus', 'September')

contoh_tuple = ('Juni', 'Juli', 'Agustus', 'September')
print(contoh_tuple[0]) # akan menghasilkan output Juni

# Tuple bersifat immutable atau tidak dapat diubah nilainya
contoh_tuple = ('Juni', 'Juli', 'Agustus', 'September')
contoh_tuple[0] = 'Desember' # akan menghasilkan error

# Tugas
contoh_tuple = ('Januari', 'Februari', 'Maret', 'April')
print(contoh_tuple[0])

# Tugas
contoh_tuple = ('Januari', 'Februari', 'Maret', 'April')
contoh_tuple[0] = 'Desember' # akan menghasilkan error

"""# Set Type"""

contoh_list = ['Theo', 'Annete', 'Mel', 'Handy', 'Mel']
print(contoh_list)

contoh_set = {'Theo', 'Annete', 'Mel', 'Handy', 'Mel'}
print(contoh_set)

# frozenset: set yang bersifat immutable
contoh_frozen_set = ({'Theo', 'Annete', 'Mel', 'Handy', 'Mel'})
print(contoh_frozen_set)

# Tugas
contoh_list = ['Dewi', 'Budi', 'Cici', 'Linda', 'Cici']
print(contoh_list)
contoh_set = {'Dewi', 'Budi', 'Cici', 'Linda', 'Cici'}
print(contoh_set)
contoh_frozen_set = ({'Dewi', 'Budi', 'Cici', 'Linda', 'Cici'})
print(contoh_frozen_set)

"""# Mapping Type / Dictionary"""

person = {'nama' : 'Theo Lau', 'pekerjaan' : 'Data Analyst'}

print(person['nama'])
print(person['pekerjaan'])

# Tugas
person = {'nama':'John Doe', 'pekerjaan':'programmer'}
print(person['nama'])
print(person['pekerjaan'])

"""# Tugas Praktek"""

sepatu = {'nama' : 'Sepatu Niko', 'harga' : 150000, 'diskon' : 30000}
baju = {'nama' : 'Baju Unikloh', 'harga' : 80000, 'diskon' : 8000}
celana = {'nama' : 'Celana Lepis', 'harga' : 200000, 'diskon' : 60000}

"""# Tugas Praktek"""

daftar_belaja = [sepatu, baju, celana]

"""# Tugas Praktek"""

# Data yang dinyatakan ke dalam dictionary
sepatu = {"nama": "Sepatu Niko", "harga": 150000, "diskon": 30000} 
baju = {"nama": "Baju Unikloh", "harga": 80000, "diskon": 8000} 
celana = {"nama": "Celana Lepis", "harga": 200000, "diskon": 60000}

# Hitunglah harga masing-masing data setelah dikurangi diskon
harga_sepatu = sepatu["harga"] - sepatu["diskon"] 
harga_baju = baju["harga"] - baju["diskon"]
harga_celana = celana["harga"] - celana["diskon"]

# Hitung harga total
total_harga = harga_sepatu + harga_baju + harga_celana

# Hitung harga kena pajak (pajak 10%)
total_pajak = total_harga * 0.1

# Cetak total_harga + total_pajak
print(total_harga + total_pajak)

"""# Arithmetic Operators"""

print(3 + 5) # Penambahan
print(4 - 2) # Pengurangan
print(3 * 2) # Perkalian
print(3 / 2) # Pembagian
print(3 % 2) # Modulo
print(8 % 2) # Modulo
print(3 ** 2) # Perpangkatan
print(3 / 2) # Floor

"""# Assignment Operators"""

# Penambahan
x = 3

x += 2

print(x)

# Pengurangan 
x = 3

x -= 2

print(x)

# Perkalian
x = 3

x *= 2

print(x)

# Pembagian
x = 3

x /= 2

print(x)

# Modulo
x = 3

x %= 2

print(x)

# Pangkat
x = 3

x **= 2

print(x)

# Floor
x = 3

x //= 2

print(x)

"""# Comparison Operators"""

# Persamaan ==
x = 33

print(x == 33)
print(x == 34)

# Pertidaksamaan !=
x = 33

print(x != 33)
print(x != 34)

# Lebih besar >
x = 33
y = 34

print(x > y)
print(y > x)

# Kurang dari <
x = 33
y = 34

print(x < y)
print(y < x)

# Lebih besar sama dengan >=
x = 33
y = 34

print(x >= y)
print(y >= x)

# kurang dari sama dengan <=
x = 33
y = 34

print(x <= y)
print(y <= x)

"""# Logical Operators"""

# and
x = 5

print(x >= 1 and x <= 10)

# and
x = 5

print(x >= 1 and x <= 4)

# or
x = 3

print(x >= 1 or x <= 2)

# or
x = 3

print(x >= 4 or x <= 2)

# not
x = 77

print(not(x == 7))
print(not(x >= 10))

"""# Identity Operators"""

# is
x = ['Ani', 'Budi']
y = ['Ani', 'Budi']

a = x

print(a is x)
print(a is y)

# is
x = ['Ani', 'Budi']
y = ['Ani', 'Budi']

a = x

print(a is not x)
print(a is not y)

# contoh lain penerapan dari identity operators
x = 10
print(type(x) is int)

x /= 3
print(type(x) is int)

"""# Membership Operators"""

# in
x = ["Ani", "Budi", "Cici"]

y = "Cici"

z = "Dodi"

print(y in x)
print(z in x)

# not in
x = ["Ani", "Budi", "Cici"]

y = "Cici"

z = "Dodi"

print(y not in x)
print(z not in x)

"""# Nilai Prioritas Operator dalam Python – Part 1"""

# Kode awal
total_harga = 150000
potongan_harga = 0.3
pajak = 0.1 # pajak dalam persen ~ 10%
harga_bayar = 1 - 0.3 # baris pertama
harga_bayar *= total_harga # baris kedua
pajak_bayar = pajak * harga_bayar # baris ketiga
harga_bayar += pajak_bayar # baris ke-4
print("Kode awal: harga_bayar =", harga_bayar)

# Penyederhanaan baris kode dengan menerapkan prioritas operator
total_harga = 150000
potongan_harga = 0.3
pajak = 0.1 # pajak dalam persen ~ 10%
harga_bayar = (1 - 0.3) * total_harga #baris pertama 
harga_bayar += harga_bayar * pajak # baris kedua
print("Penyederhanaan kode: harga_bayar =", harga_bayar)

"""# Tugas Praktek"""

sepatu = { "nama" : "Sepatu Niko", "harga": 150000, "diskon": 30000 }
baju = { "nama" : "Baju Unikloh", "harga": 80000, "diskon": 8000 }
celana = { "nama" : "Celana Lepis", "harga": 200000, "diskon": 60000 }
harga_sepatu = sepatu["harga"] - sepatu["diskon"]
harga_baju = baju["harga"] - baju["diskon"]
harga_celana = celana["harga"] - celana["diskon"]
total_harga = (harga_sepatu + harga_baju + harga_celana) * 1.1
print(total_harga)

"""# Python Conditioning for Decision"""

x = 4

if x % 2 == 0: # jika sisa bagi x dengan 2 sama dengan 0
    print("x habis dibagi dua") # statemen aksi lebih menjorok ke dalam

# Tugas
if x % 2 == 0: # jika sisa bagi x dengan 2 sama dengan 0
    print("x habis dibagi dua")
elif x % 3 == 0: # jika sisa bagi x dengan 3 sama dengan 0
    print("x habis dibagi tiga")
elif x % 5 == 0: # jika sisa bagi x dengan 5 sama dengan 0
    print("x habis dibagi lima")
else:
    print("x tidak habis dibagi dua, tiga, ataupun lima")

# Tugas
jam = 13

if jam >= 5 and jam < 12: # selama jam 5 s.d. 12
    print("Selamat Pagi!")
elif jam >= 12 and jam < 17: # selama jam 12 s.d. 17
    print("Selamat Siang!")
elif jam >= 17 and jam < 19: # selama jam 17 s.d. 19
    print("Selamat Sore!")
else: # selain kondisi di atas
    print("Selamat Malam!")

"""# Tugas Praktek"""

tagihan_ke = 'Mr. Yoyo'
warehousing = {'harga_harian' : 1000000, 'total_hari' : 15} 
cleansing = {'harga_harian' : 1500000, 'total_hari' : 10} 
integration = {'harga_harian' : 2000000, 'total_hari' : 15} 
transform = {'harga_harian' : 2500000, 'total_hari' : 10}
sub_warehousing = warehousing['harga_harian'] * warehousing['total_hari']
sub_cleansing = cleansing['harga_harian'] * cleansing['total_hari']
sub_integration = integration['harga_harian'] * integration['total_hari']
sub_transform = transform['harga_harian'] * transform['total_hari']
total_harga = sub_warehousing + sub_cleansing + sub_integration + sub_transform
print("Tagihan kepada:") 
print(tagihan_ke)
print("Selamat pagi, anda harus membayar tagihan sebesar:") 
print(total_harga)

"""# Tugas Praktek"""

jam = 17
tagihan_ke = 'Mr. Yoyo'
warehousing = { 'harga_harian': 1000000, 'total_hari':15 } 
cleansing = { 'harga_harian': 1500000, 'total_hari':10 } 
integration = { 'harga_harian':2000000, 'total_hari':15 } 
transform = { 'harga_harian':2500000, 'total_hari':10 }
sub_warehousing = warehousing['harga_harian']*warehousing['total_hari'] 
sub_cleansing = cleansing['harga_harian']*cleansing['total_hari'] 
sub_integration = integration['harga_harian']*integration['total_hari'] 
sub_transform = transform['harga_harian']*transform['total_hari']
total_harga = sub_warehousing+sub_cleansing+sub_integration+sub_transform
print("Tagihan kepada:")
print(tagihan_ke)
if jam > 19:
    print("Selamat malam, anda harus membayar tagihan sebesar:")
elif jam > 17:
    print("Selamat sore, anda harus membayar tagihan sebesar:") 
elif jam > 12:
    print("Selamat siang, anda harus membayar tagihan sebesar:")
else:
    print("Selamat pagi, anda harus membayar tagihan sebesar:") 
print(total_harga)

"""# Python while loops – Part 1"""

# Tugas 1
tagihan = [50000, 75000, 125000, 300000, 200000]
total_tagihan = tagihan[0] + tagihan[1] + tagihan[2] + tagihan[3] + tagihan[4]
print(total_tagihan)

# Tugas 2
i = 0 # sebuah variabel untuk mengakses setiap elemen tagihan satu per satu
jumlah_tagihan = len(tagihan) # panjang (jumlah elemen dalam) list tagihan
total_tagihan = 0 # mula-mula, set total_tagihan ke 0
while i < jumlah_tagihan: # selama nilai i kurang dari jumlah tagihan
    total_tagihan += tagihan[i] # tambahkan tagihan[i] ke total_tagihan
    i += 1 # tambahkan nilai i dengan 1 untuk memproses tagihan selanjutnya
print(total_tagihan)

"""# Python while loops – Part 2"""

tagihan = [50000, 75000, -150000, 125000, 300000, -50000, 200000]
i = 0
jumlah_tagihan = len(tagihan)
total_tagihan = 0
while i < jumlah_tagihan:
    # jika terdapat tagihan ke-i yang bernilai minus (di bawah nol), pengulangan akan dihentikan
    if tagihan[i] < 0:
        total_tagihan = -1
        print("terdapat angka minus dalam tagihan, perhitungan dihentikan!")
        break
    total_tagihan += tagihan[i]
    i += 1
print(total_tagihan)

"""# Python while loops – Part 3"""

tagihan = [50000, 75000, -150000, 125000, 300000, -50000, 200000]
i = 0
jumlah_tagihan = len(tagihan)
total_tagihan = 0
while i < jumlah_tagihan:
    if tagihan[i] < 0:
        i += 1
        continue
    total_tagihan += tagihan[i]
    i += 1
print(total_tagihan)

"""# Python for loops – Part 1"""

list_tagihan = [50000, 75000, -150000, 125000, 300000, -50000, 200000]
total_tagihan = 0
for tagihan in list_tagihan: # untuk setiap tagihan dalam list tagihan
    total_tagihan += tagihan # tambahkan tagihan ke total_tagihan
print(total_tagihan)

"""# Python for loops – Part 2"""

list_tagihan = [50000, 75000, -150000, 125000, 300000, -50000, 200000]
total_tagihan = 0
for tagihan in list_tagihan:
    if tagihan < 0:
        print("terdapat angka minus dalam tagihan, perhitungan dihentikan")
        break
    total_tagihan += tagihan
print(total_tagihan)

"""# Python for loops – Part 3"""

# nested loops
list_daerah = ['Malang', 'Palembang', 'Medan']
list_buah = ['Apel', 'Duku', 'Jeruk']
for nama_daerah in list_daerah:
    for nama_buah in list_buah:
        print(nama_buah + " " + nama_daerah)

"""# Tugas Praktek"""

list_cash_flow = [
2500000, 5000000, -1000000, -2500000, 5000000, 10000000,
-5000000, 7500000, 10000000, -1500000, 25000000, -2500000
]

total_pengeluaran, total_pemasukan = 0, 0
for dana in list_cash_flow:
    if dana > 0:
        total_pemasukan += dana
    else:
        total_pengeluaran += dana
total_pengeluaran *= -1
print(total_pengeluaran);print(total_pemasukan)

"""# Mini Quiz"""

# Data
uang_jalan = 1500000
jumlah_hari = 31
list_plat_nomor = [8993, 2198, 2501, 2735, 3772, 4837, 9152]

# Pengecekan kendaraan dengan nomor pelat ganjil atau genap

# Deklarasikan kendaraan_genap dan kendaraan_ganjil = 0

kendaraan_genap = 0 
kendaraan_ganjil = 0

for plat_nomor in list_plat_nomor:
    if plat_nomor % 2 == 0:
        kendaraan_genap += 1
    else:
        kendaraan_ganjil += 1

# Total pengeluaran untuk kendaraan dengan nomor pelat ganjil dan genap dalam 1 bulan
i = 1
total_pengeluaran = 0
while i <= jumlah_hari:
    if i % 2 == 0:
        total_pengeluaran += (kendaraan_genap * uang_jalan)
    else:
        total_pengeluaran += (kendaraan_ganjil * uang_jalan)
    i += 1
# Cetak total pengeluaran
print(total_pengeluaran)